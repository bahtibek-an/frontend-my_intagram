// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∏–∑ React –∏ –¥—Ä—É–≥–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import React, { useState } from "react";
import "./PostCard.css";
import { FiHeart, FiSend, FiSmile } from "react-icons/fi";
import { FaRegComment } from "react-icons/fa";
import { updateDoc, arrayUnion, doc, arrayRemove } from "firebase/firestore";
import { db, auth } from '../../context/FirebaseConfig';
import { Link } from "react-router-dom";




// –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö
const emojiList = ['üòÑ' , 'üòÅ' , 'ü§£', 'üòÖ' , 'üòÇ' , 'üôÇ' , 'üôÉ' , 'ü´†' , 'üòâ' , 'üòä' , 'üòá' , 'ü•∞' , 'üòç' , 'ü§©', 'üëã' , 'üëè' , 'üñï' , 'üëç' , 'üëé' , ];

// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ—Å—Ç–∞
const PostCard = ({ post, postId, setAlertMessage , }) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª–∞–π–∫–æ–≤, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  const [likesCount, setLikesCount] = useState(post.likes);
  const [comments, setComments] = useState("");
  const [isClick, setIsClick] = useState(false);
  const [isOpenedEmoji, setIsOpenedEmoji] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏
  const openEmoji = () => {
    setIsOpenedEmoji(prev => !prev);
  };


      const isAuthor = auth.currentUser.displayName === post.username;
  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ—Å—Ç–∞–≤–∏–ª –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∞–π–∫ –Ω–∞ –ø–æ—Å—Ç
  const isLiked = post.likes.filter(
    (value) => auth.currentUser.displayName === value.username
  );

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∞–π–∫–æ–≤ –ø–æ—Å—Ç–∞
  const handleLikes = async () => {
    setIsClick(true);

    try {
      // –ï—Å–ª–∏ —É–∂–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –ª–∞–π–∫, —Ç–æ —É–±—Ä–∞—Ç—å –ª–∞–π–∫ –ø—Ä–∏ –∫–ª–∏–∫–µ
      if (isLiked.length !== 0) {
        setLikesCount(likesCount - 1);
        await updateDoc(doc(db, "posts", postId), {
          likes: arrayRemove({
            username: auth.currentUser.displayName,
          }),
        });
      }
      // –ï—Å–ª–∏ –ª–∞–π–∫–∞ –µ—â–µ –Ω–µ—Ç, —Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–∞–π–∫ –ø—Ä–∏ –∫–ª–∏–∫–µ
      else {
        setLikesCount(likesCount + 1);
        await updateDoc(doc(db, "posts", postId), {
          likes: arrayUnion({
            username: auth.currentUser.displayName,
          }),
        });
      }
    } catch (error) {
      console.log(error);
      setAlertMessage(error.message);
    }

    // –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∏–∫–∞ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
    setTimeout(() => {
      setIsClick(false);
    }, 1000);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –ø–æ—Å—Ç—É
  const handlePostComments = async () => {
    try {
      await updateDoc(doc(db, "posts", postId), {
        comments: arrayUnion({
          username: auth.currentUser.displayName,
          comment: comments,
        }),
      });
      setComments("");
    } catch (error) {
      console.log(error);
      setAlertMessage(error.message);
      setComments("");
    }
  };


  // JSX —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ—Å—Ç–∞
  return (
    <div className="card-container">
      {/* –°–µ–∫—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <div className="card-wrapper">
        <div className="card-header align-center ">
          <div className="image-wrapper absolute-center">
            <img
              src="https://cdn-icons-png.flaticon.com/512/149/149071.png"
              alt="user-profile"
            />
          </div>
          <Link to={`/profile/${post.username}`}>
            <div className="profile-username cur-point">{post.username}</div>
          </Link>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –ø–æ—Å—Ç–∞ */}
        <div
          className="post-wrapper absolute-center cur-point"
          onDoubleClick={handleLikes}
        >
          <img src={post.imageUrl} alt="post" />
          <div
            className="large-like-icon"
            style={{ display: isClick ? "block" : "none" }}
          >
            <FiHeart
              style={{
                width: "100%",
                height: "100%",
                fill: "red",
                color: "red",
              }}
            />
          </div>
        </div>

        {/* –°–µ–∫—Ü–∏—è —Å–Ω–∏–∑—É —Å –∏–∫–æ–Ω–∫–∞–º–∏ –ª–∞–π–∫–æ–≤, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ —à–∞—Ä–∏–Ω–≥–∞ */}
        <div className="card-bottom">
          <div className="post-like-comments-wrapper align-center">
            <div className="like-icon absolute-center">
              {/* –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞ —Å –∏–∫–æ–Ω–∫–æ–π —Å–µ—Ä–¥—Ü–∞ */}
              <button
                type="button"
                title="like"
                onClick={handleLikes}
                className="like-btn cur-point"
              >
                <FiHeart
                  style={{
                    width: "100%",
                    height: "100%",
                    fill: isLiked.length > 0 && "red",
                    color: isLiked.length > 0 && "red",
                  }}
                />
              </button>
            </div>

            {/* –ò–∫–æ–Ω–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
            <div className="comments-icon absolute-center">
              <FaRegComment style={{ width: "100%", height: "100%" }} />
            </div>

            {/* –ò–∫–æ–Ω–∫–∞ —à–∞—Ä–∏–Ω–≥–∞ */}
            <div
              className="share-icon absolute-center cur-point"
              // onClick={() => handleShare(post.username, post.caption)}
            >
              <FiSend style={{ width: "100%", height: "100%" }} />
            </div>
          </div>

          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª–∞–π–∫–æ–≤ –∏ –¥–∞—Ç—ã –ø–æ—Å—Ç–∞ */}
          <div className="like-count-wrapper ">{post.likes.length} –õ–∞–π–∫–æ–≤</div>
          <div className="post-date-wrapper">
            {post.datePostedOn.toDate().toDateString()}
          </div>

          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–¥–ø–∏—Å–∏ –∫ –ø–æ—Å—Ç—É */}
          <div className="username-caption-wrapper align-center ">
            <div className="profile-username">{post.username}</div>
            <div className="caption-wrapper">{post.caption}</div>
          </div>

          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –ø–æ—Å—Ç—É */}
          {post.comments?.map((data, index) => (
            <div className="comments-display-section align-center" key={index}>
              <p className="profile-username">{data.username}</p>
              <p className="comments-wrapper caption-wrapper">{data.comment}</p>
            </div>
          ))}
        </div>

        {/* –°–µ–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ —ç–º–æ–¥–∑–∏ */}
        <div className="post-comments-wrapper align-center">
          <div className="smile-icon">
            <div className="ffr">
              {/* –ò–∫–æ–Ω–∫–∞ –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏ */}
              <FiSmile
                onClick={openEmoji}
                style={{
                  width: "100%",
                  height: "100%",
                }}
              />
              
              {/* –í—ã–±–æ—Ä —ç–º–æ–¥–∑–∏ */}
              {isOpenedEmoji && (
                
                <ul >
                  {emojiList.map((emoji, idx) => (
                    <li 
                      onClick={() => setComments(comments + emoji)}
                      key={idx}
                    >{ emoji }</li>
                  ))}
                </ul>
              )}
            </div>
          </div>
          <input
            type="text"
            className="comments-input"
            placeholder="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
            onChange={(e) => setComments(e.target.value)}
            value={comments ?? ""}
            min={1}
            maxLength={50}
          />

          <button
            disabled={comments.length <= 0}
            onClick={handlePostComments}
            type="button"
            className="comments-post-btn cur-point"
            style={{ opacity: comments.length <= 0 && "0.5" }}
          >
            Publish
          </button>
        </div>
      </div>
    </div>
    
  );
};

export default PostCard;
